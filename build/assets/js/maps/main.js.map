{"version":3,"sources":["../../node_modules/coop-frontend-toolkit/scripts/coop-toolkit.js","../../node_modules/coop-frontend-toolkit/scripts/modules/coop.MenuToggle.js","../../node_modules/coop-frontend-toolkit/scripts/modules/coop.Tabs.js","../../node_modules/coop-frontend-toolkit/scripts/modules/coop.Toggles.js","main.js"],"names":["Coop","Modules","Events","$","init","x","trigger","window","console","log","MenuToggle","defaults","toggleSelector","navSelector","menuTextSelector","closeText","openClass","options","this","settings","extend","$toggle","$nav","$menuText","originalText","eq","text","bindEvents","self","off","on","e","preventDefault","toggle","hasClass","close","open","add","addClass","removeClass","Tabs","$el","prototype","$tabs","$navItems","$tabPanels","addAria","activateTab","attr","each","controlId","replace","i","currentAttribute","tabId","filter","aria-hidden","hidden","removeAttr","_Tabs","data","selector","Toggles","$trigger","$target","$textContainer","addARIA","is","getTarget","focus","parent","siblings","_Toggles","find"],"mappings":"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","file":"main.js","sourcesContent":["// Adapted from https://github.com/Heisenbergjs/heisenberg/blob/master/app/app.js\n(function() {\n  var Coop = {\n\n    Modules: {},\n\n    Events: $({}),\n\n    init: function () {\n      // Loop through all the modules added to the coop.Modules object. We check that the init function of each Module can be called.\n      for(var x in Coop.Modules) {\n        if (typeof Coop.Modules[x].init === 'function') {\n          Coop.Modules[x].init();\n        }\n      }\n\n      Coop.Events.trigger('render');\n    }\n  };\n\n  // expose the Coop object globally\n  window.Coop = Coop;\n})();\n","if (window.console) {\n  console.log(\"The MenuToggle Toolkit module is deprecated. Please use the Toggles module instead.\");\n}\n\n(function() {\n  'use strict';\n\n  window.Coop = window.Coop || { Modules: {} };\n\n  Coop.Modules.MenuToggle = {\n    defaults: {\n      toggleSelector: '.mobile-menu-toggle',\n      navSelector: '#navigation',\n      menuTextSelector: '.mobile-menu-text',\n      closeText: 'Close',\n      openClass: 'open'\n    },\n    init: function(options) {\n      this.settings = $.extend({}, this.defaults, options);\n\n      this.$toggle = $(this.settings.toggleSelector);\n      this.$nav = $(this.settings.navSelector);\n      this.$menuText = $(this.settings.menuTextSelector);\n\n      this.originalText = this.$menuText.eq(0).text();\n\n      this.bindEvents();\n    },\n    bindEvents: function() {\n      var self = this;\n\n      this.$toggle\n        .off('click.MenuToggle')\n        .on('click.MenuToggle', function(e) {\n          e.preventDefault();\n          self.toggle();\n        });\n    },\n    toggle: function() {\n      if (this.$toggle.hasClass(this.settings.openClass)) {\n        this.close();\n      }\n      else {\n        this.open();\n      }\n    },\n    open: function() {\n      this.$toggle.add(this.$nav).addClass(this.settings.openClass);\n      $(this.settings.menuTextSelector, this.$toggle).text(this.settings.closeText);\n    },\n    close: function() {\n      this.$toggle.add(this.$nav).removeClass(this.settings.openClass);\n      $(this.settings.menuTextSelector, this.$toggle).text(this.originalText);\n    }\n  };\n}());\n","(function() {\n  'use strict';\n\n  window.Coop = window.Coop || { Modules: {} };\n\n  var Tabs = function($el, options) {\n    this.init($el, options);\n    return this;\n  };\n\n  Tabs.prototype = {\n    init: function($el, options) {\n      this.$tabs = $el;\n      this.$navItems = $('.tabs-nav a', $el);\n      this.$tabPanels = $('.tabs-content .tab-panel', $el);\n\n      this.addAria();\n      this.bindEvents();\n\n      // Activate first tab\n      this.activateTab(this.$navItems.eq(0).attr('href'));\n\n      $el.addClass('init');\n    },\n    bindEvents: function() {\n      var self = this;\n\n      this.$navItems\n        .off('click.Tabs')\n        .on('click.Tabs', function(e) {\n          e.preventDefault();\n          self.activateTab($(this).attr('href'));\n        });\n    },\n    addAria: function() {\n      this.$navItems.each(function() {\n        var controlId = $(this).attr('href').replace('#', '');\n        $(this).attr('aria-controls', function(i, currentAttribute) {\n          return currentAttribute ? currentAttribute + ' ' + controlId : controlId;\n        });\n      });\n      this.$tabPanels.attr('aria-live', 'polite');\n    },\n    activateTab: function(tabId) {\n      this.$navItems\n        .removeClass('active')\n        .filter('[href=\"' + tabId + '\"]')\n          .addClass('active');\n\n      this.$tabPanels\n        .removeClass('active')\n        .attr({\n          'aria-hidden': true,\n          'hidden': true\n        })\n        .filter(tabId)\n          .addClass('active')\n          .removeAttr('aria-hidden hidden');\n    }\n  };\n\n  Coop.Modules._Tabs = Tabs;\n\n  Coop.Modules.Tabs = {\n    init: function() {\n      return $('.tabs').each(function() {\n        $(this).data('Tabs', new Tabs($(this), $(this).data()));\n      });\n    }\n  };\n}());\n\n// Tabs\n// $('.tabs').on('click', '.tabs-nav a', function(e) {\n//   e.preventDefault();\n//   $(this).addClass('active').parent('li').siblings().find('a').removeClass('active');\n//   $($(this).attr('href')).addClass('active').siblings().removeClass('active');\n// }).addClass('init').find('.tabs-nav li:first a').trigger('click');\n","/**\n * Toggles module\n *\n * Progressive content reveal.\n *\n * Usage:\n<a href=\"#target\" data-toggle>Trigger</a>\n<div id=\"target\">Target content</div>\n *\n * Options:\n<a href=\"#target\" data-toggle data-toggle-text-selector=\".text\" data-toggle-text-open=\"Close\">\n  <span class=\"text\">Open</span>\n</a>\n<div id=\"target\">Target content</div>\n */\n\n(function() {\n  'use strict';\n\n  window.Coop = window.Coop || { Modules: {} };\n\n  var selector = '[data-toggle], .toggle-trigger';\n\n  var Toggles = function($el, options) {\n    this.init($el, options);\n    return this;\n  };\n\n  Toggles.prototype = {\n    init: function($el, options) {\n      this.$trigger = $el;\n      this.$target = $($el.attr('href'));\n      this.$textContainer = $($el.data('toggle-text-selector') || $el).eq(0);\n\n      $el.data('toggle-target', this.$target);\n      $el.data('toggle-text-container', this.$textContainer);\n\n      if ($el.attr('data-toggle-text-closed')) {\n        $el.data('toggle-text-open', this.$textContainer.text());\n      }\n      if ($el.attr('data-toggle-text-open')) {\n        $el.data('toggle-text-closed', this.$textContainer.text());\n      }\n\n      this.addARIA();\n      this.bindEvents();\n\n      $el.add(this.$target).addClass('init');\n    },\n    addARIA: function() {\n      if (!this.$trigger.is('button')) {\n        this.$trigger.attr('role', 'button');\n      }\n      this.$trigger\n        .attr('aria-controls', this.$target.attr('id'))\n        .attr('aria-expanded', 'false');\n\n      this.$target\n        .attr('aria-hidden', 'true')\n        .attr('tabindex', '-1');\n    },\n    bindEvents: function() {\n      var self = this;\n\n      this.$trigger\n        .off('click.Toggles')\n        .on('click.Toggles', function(e) {\n          e.preventDefault();\n          self.toggle($(this));\n        });\n    },\n    getTarget: function($el) {\n      return $el.data('toggle-target');\n    },\n    toggle: function() {\n      if (this.$trigger.hasClass('open')) {\n        this.close(this.$trigger);\n      }\n      else {\n        this.open();\n      }\n    },\n    open: function() {\n      var self = this;\n\n      this.$trigger.add(this.$target).addClass('open');\n\n      this.$trigger.attr('aria-expanded', 'true');\n      this.$target.attr('aria-hidden', 'false').focus();\n\n      if (this.$trigger.data('toggle-text-open')) {\n        this.$textContainer.text(this.$trigger.data('toggle-text-open'));\n      }\n\n      if (this.$trigger.parent().hasClass('accordion')) {\n        this.$trigger.siblings(selector).each(function() {\n          self.close($(this));\n        });\n      }\n    },\n    close: function($el) {\n      var $target = this.getTarget($el);\n      $el.add($target).removeClass('open');\n\n      $el.attr('aria-expanded', 'false');\n      $target.attr('aria-hidden', 'true');\n\n      if ($el.data('toggle-text-closed')) {\n        $el.data('toggle-text-container').text($el.data('toggle-text-closed'));\n      }\n    }\n  };\n\n  Coop.Modules._Toggles = Toggles;\n\n  Coop.Modules.Toggles = {\n    init: function() {\n      return $(selector).each(function() {\n        $(this).data('Toggles', new Toggles($(this), $(this).data()));\n      });\n    }\n  };\n}());\n","// Adapted from https://github.com/Heisenbergjs/heisenberg/blob/master/app/app.js\n(function() {\n  var Coop = {\n\n    Modules: {},\n\n    Events: $({}),\n\n    init: function () {\n      // Loop through all the modules added to the coop.Modules object. We check that the init function of each Module can be called.\n      for(var x in Coop.Modules) {\n        if (typeof Coop.Modules[x].init === 'function') {\n          Coop.Modules[x].init();\n        }\n      }\n\n      Coop.Events.trigger('render');\n    }\n  };\n\n  // expose the Coop object globally\n  window.Coop = Coop;\n})();\n\nif (window.console) {\n  console.log(\"The MenuToggle Toolkit module is deprecated. Please use the Toggles module instead.\");\n}\n\n(function() {\n  'use strict';\n\n  window.Coop = window.Coop || { Modules: {} };\n\n  Coop.Modules.MenuToggle = {\n    defaults: {\n      toggleSelector: '.mobile-menu-toggle',\n      navSelector: '#navigation',\n      menuTextSelector: '.mobile-menu-text',\n      closeText: 'Close',\n      openClass: 'open'\n    },\n    init: function(options) {\n      this.settings = $.extend({}, this.defaults, options);\n\n      this.$toggle = $(this.settings.toggleSelector);\n      this.$nav = $(this.settings.navSelector);\n      this.$menuText = $(this.settings.menuTextSelector);\n\n      this.originalText = this.$menuText.eq(0).text();\n\n      this.bindEvents();\n    },\n    bindEvents: function() {\n      var self = this;\n\n      this.$toggle\n        .off('click.MenuToggle')\n        .on('click.MenuToggle', function(e) {\n          e.preventDefault();\n          self.toggle();\n        });\n    },\n    toggle: function() {\n      if (this.$toggle.hasClass(this.settings.openClass)) {\n        this.close();\n      }\n      else {\n        this.open();\n      }\n    },\n    open: function() {\n      this.$toggle.add(this.$nav).addClass(this.settings.openClass);\n      $(this.settings.menuTextSelector, this.$toggle).text(this.settings.closeText);\n    },\n    close: function() {\n      this.$toggle.add(this.$nav).removeClass(this.settings.openClass);\n      $(this.settings.menuTextSelector, this.$toggle).text(this.originalText);\n    }\n  };\n}());\n\n(function() {\n  'use strict';\n\n  window.Coop = window.Coop || { Modules: {} };\n\n  var Tabs = function($el, options) {\n    this.init($el, options);\n    return this;\n  };\n\n  Tabs.prototype = {\n    init: function($el, options) {\n      this.$tabs = $el;\n      this.$navItems = $('.tabs-nav a', $el);\n      this.$tabPanels = $('.tabs-content .tab-panel', $el);\n\n      this.addAria();\n      this.bindEvents();\n\n      // Activate first tab\n      this.activateTab(this.$navItems.eq(0).attr('href'));\n\n      $el.addClass('init');\n    },\n    bindEvents: function() {\n      var self = this;\n\n      this.$navItems\n        .off('click.Tabs')\n        .on('click.Tabs', function(e) {\n          e.preventDefault();\n          self.activateTab($(this).attr('href'));\n        });\n    },\n    addAria: function() {\n      this.$navItems.each(function() {\n        var controlId = $(this).attr('href').replace('#', '');\n        $(this).attr('aria-controls', function(i, currentAttribute) {\n          return currentAttribute ? currentAttribute + ' ' + controlId : controlId;\n        });\n      });\n      this.$tabPanels.attr('aria-live', 'polite');\n    },\n    activateTab: function(tabId) {\n      this.$navItems\n        .removeClass('active')\n        .filter('[href=\"' + tabId + '\"]')\n          .addClass('active');\n\n      this.$tabPanels\n        .removeClass('active')\n        .attr({\n          'aria-hidden': true,\n          'hidden': true\n        })\n        .filter(tabId)\n          .addClass('active')\n          .removeAttr('aria-hidden hidden');\n    }\n  };\n\n  Coop.Modules._Tabs = Tabs;\n\n  Coop.Modules.Tabs = {\n    init: function() {\n      return $('.tabs').each(function() {\n        $(this).data('Tabs', new Tabs($(this), $(this).data()));\n      });\n    }\n  };\n}());\n\n// Tabs\n// $('.tabs').on('click', '.tabs-nav a', function(e) {\n//   e.preventDefault();\n//   $(this).addClass('active').parent('li').siblings().find('a').removeClass('active');\n//   $($(this).attr('href')).addClass('active').siblings().removeClass('active');\n// }).addClass('init').find('.tabs-nav li:first a').trigger('click');\n\n/**\n * Toggles module\n *\n * Progressive content reveal.\n *\n * Usage:\n<a href=\"#target\" data-toggle>Trigger</a>\n<div id=\"target\">Target content</div>\n *\n * Options:\n<a href=\"#target\" data-toggle data-toggle-text-selector=\".text\" data-toggle-text-open=\"Close\">\n  <span class=\"text\">Open</span>\n</a>\n<div id=\"target\">Target content</div>\n */\n\n(function() {\n  'use strict';\n\n  window.Coop = window.Coop || { Modules: {} };\n\n  var selector = '[data-toggle], .toggle-trigger';\n\n  var Toggles = function($el, options) {\n    this.init($el, options);\n    return this;\n  };\n\n  Toggles.prototype = {\n    init: function($el, options) {\n      this.$trigger = $el;\n      this.$target = $($el.attr('href'));\n      this.$textContainer = $($el.data('toggle-text-selector') || $el).eq(0);\n\n      $el.data('toggle-target', this.$target);\n      $el.data('toggle-text-container', this.$textContainer);\n\n      if ($el.attr('data-toggle-text-closed')) {\n        $el.data('toggle-text-open', this.$textContainer.text());\n      }\n      if ($el.attr('data-toggle-text-open')) {\n        $el.data('toggle-text-closed', this.$textContainer.text());\n      }\n\n      this.addARIA();\n      this.bindEvents();\n\n      $el.add(this.$target).addClass('init');\n    },\n    addARIA: function() {\n      if (!this.$trigger.is('button')) {\n        this.$trigger.attr('role', 'button');\n      }\n      this.$trigger\n        .attr('aria-controls', this.$target.attr('id'))\n        .attr('aria-expanded', 'false');\n\n      this.$target\n        .attr('aria-hidden', 'true')\n        .attr('tabindex', '-1');\n    },\n    bindEvents: function() {\n      var self = this;\n\n      this.$trigger\n        .off('click.Toggles')\n        .on('click.Toggles', function(e) {\n          e.preventDefault();\n          self.toggle($(this));\n        });\n    },\n    getTarget: function($el) {\n      return $el.data('toggle-target');\n    },\n    toggle: function() {\n      if (this.$trigger.hasClass('open')) {\n        this.close(this.$trigger);\n      }\n      else {\n        this.open();\n      }\n    },\n    open: function() {\n      var self = this;\n\n      this.$trigger.add(this.$target).addClass('open');\n\n      this.$trigger.attr('aria-expanded', 'true');\n      this.$target.attr('aria-hidden', 'false').focus();\n\n      if (this.$trigger.data('toggle-text-open')) {\n        this.$textContainer.text(this.$trigger.data('toggle-text-open'));\n      }\n\n      if (this.$trigger.parent().hasClass('accordion')) {\n        this.$trigger.siblings(selector).each(function() {\n          self.close($(this));\n        });\n      }\n    },\n    close: function($el) {\n      var $target = this.getTarget($el);\n      $el.add($target).removeClass('open');\n\n      $el.attr('aria-expanded', 'false');\n      $target.attr('aria-hidden', 'true');\n\n      if ($el.data('toggle-text-closed')) {\n        $el.data('toggle-text-container').text($el.data('toggle-text-closed'));\n      }\n    }\n  };\n\n  Coop.Modules._Toggles = Toggles;\n\n  Coop.Modules.Toggles = {\n    init: function() {\n      return $(selector).each(function() {\n        $(this).data('Toggles', new Toggles($(this), $(this).data()));\n      });\n    }\n  };\n}());\n\n\n$(function() {\n  Coop.init();\n\n  // Mock mobile menu functionality for the header example\n  $('.example .mobile-menu-toggle')\n    .off('click.MenuToggle')\n    .on('click', function(e) {\n      e.preventDefault();\n      if($(this).hasClass('open')) {\n        $(this).add('#navigation-example').removeClass('open').find('.mobile-menu-text').text('Menu');\n      }\n      else {\n        $(this).add('#navigation-example').addClass('open').find('.mobile-menu-text').text('Close');\n      }\n    });\n});\n\n// $(document).ready(function() {\n//\n//   // Initialise basic form validation\n//   $('#login-form').parsley();\n//\n// });\n//\n// // Initialise multistep validation\n// $(function () {\n//   var $sections = $('.form-section');\n//\n//   function navigateTo(index) {\n//     // Mark the current section with the class 'current'\n//     $sections\n//       .removeClass('current')\n//       .eq(index)\n//         .addClass('current');\n//     // Show only the navigation buttons that make sense for the current section:\n//     $('.form-navigation .previous').toggle(index > 0);\n//     var atTheEnd = index >= $sections.length - 1;\n//     $('.form-navigation .next').toggle(!atTheEnd);\n//     $('.form-navigation [type=submit]').toggle(atTheEnd);\n//   }\n//\n//   function curIndex() {\n//     // Return the current index by looking at which section has the class 'current'\n//     return $sections.index($sections.filter('.current'));\n//   }\n//\n//   // Previous button is easy, just go back\n//   $('.form-navigation .previous').click(function() {\n//     navigateTo(curIndex() - 1);\n//   });\n//\n//   // Next button goes forward iff current block validates\n//   $('.form-navigation .next').click(function() {\n//     if ($('.registration-form').parsley().validate('block-' + curIndex()))\n//       navigateTo(curIndex() + 1);\n//   });\n//\n//   // Prepare sections by setting the `data-parsley-group` attribute to 'block-0', 'block-1', etc.\n//   $sections.each(function(index, section) {\n//     $(section).find(':input').attr('data-parsley-group', 'block-' + index);\n//   });\n//   navigateTo(0); // Start at the beginning\n// });\n"],"sourceRoot":"/source/"}