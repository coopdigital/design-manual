/* ================================================
 * Mixins - Utilities - Co-op Front-end Foundations
 * ================================================ */

@mixin clearfix {
  &::before,
  &::after {
    content: " ";
    display: table;
  }

  &::after {
    clear: both;
  }
}

/**
 * Add styles for IE browsers
 * @param  {int} $version: 8  Max IE version targetted
 */
@mixin ie($version: 8) {
  @if $ie <= $version {
    @content;
  }
}

/**
 * Wraps the content into a media query. Requires $breakpoints map to be set.
 * For IE version less than or equal to 8 (which do not support media
 * queries), the output is simply rendered directly.
 * @param  {string} $size Breakpoint key or explicit freeform media query
 */
@mixin media($size) {
  @if $ie <= 8 {
    @content;
  }

  @else {
    @if map-has-key($breakpoints, $size) {
      @media (min-width: #{map-get($breakpoints, $size)}) {
        @content;
      }
    }

    @else {
      @media ($size) {
        @content;
      }
    }
  }
}

@mixin visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 0;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 0;
  opacity: 0;
  letter-spacing: 0;
}

@mixin visuallyshown {
  clip: auto;
  height: auto;
  overflow: visible;
  position: static;
  width: auto;
  opacity: 1;
  letter-spacing: inherit;
}

@mixin clear {
  clear: both;
}

@mixin clear-left {
  clear: left;
}

@mixin clear-right {
  clear: right;
}

@mixin clear-none {
  clear: none;
}

@mixin respond-classes($size) {
  .#{$size}-hidden {
    @include visuallyhidden;
  }
  .#{$size}-shown {
    @include visuallyshown;
  }
  .#{$size}-clear {
    @include clear;
  }
  .#{$size}-clear-none {
    @include clear-none;
  }
  .#{$size}-clear-left {
    @include clear-left;
  }
  .#{$size}-clear-right {
    @include clear-right;
  }
}
